name: Run Python Tests (Integration & End-to-End)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_USER: root
  DB_PASSWORD: ""
  DB_NAME: test_db

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      mysql_db:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        ports:
          - "3306:3306"
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio

      - name: Wait for DB service
        run: |
          for i in $(seq 1 30); do
            mysql -h $DB_HOST -u$DB_USER -e "select 1" > /dev/null 2>&1 && break
            sleep 5
          done

      - name: Run Database Migrations
        run: |
          mysql -h $DB_HOST -u$DB_USER -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
          mysql -h $DB_HOST -u$DB_USER $DB_NAME < schema.sql

      - name: Run Integration Tests
        run: |
          pytest -v tests/integration

  end-to-end-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      mysql_db:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        ports:
          - "3306:3306"
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio

      - name: Wait for DB service
        run: |
          for i in $(seq 1 30); do
            mysql -h $DB_HOST -u$DB_USER -e "select 1" > /dev/null 2>&1 && break
            sleep 5
          done

      - name: Run Database Migrations
        run: |
          mysql -h $DB_HOST -u$DB_USER -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
          mysql -h $DB_HOST -u$DB_USER $DB_NAME < schema.sql

      - name: Run End-to-End Test
        run: |
          pytest -v tests/test_end_to_end.py
