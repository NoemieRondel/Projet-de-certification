name: Daily Data Pipeline

on:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set HuggingFace environment variables
      run: |
        echo "HF_HUB_DOWNLOAD_TIMEOUT=60" >> $GITHUB_ENV
        echo "TRANSFORMERS_CACHE=$HOME/.cache/huggingface" >> $GITHUB_ENV
        echo "SENTENCE_TRANSFORMERS_HOME=$HOME/.cache/sentence-transformers" >> $GITHUB_ENV

    - name: Pre-download SentenceTransformer model
      run: |
        python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('all-MiniLM-L6-v2')"

    - name: Run pytest tests
      run: |
        pytest tests/test_generate_summaries.py
        pytest tests/test_generate_keywords.py
        pytest tests/test_generate_keywords_scientific_articles.py

    # --- SCRAPING ---
    - name: Scrape other sources
      run: |
        python scripts/scrape_aiwatch_eu.py
        python scripts/scrape_azure_ai.py
        python scripts/scrape_digital_strategy_eu_ai.py
        python scripts/scrape_mit_technology_review_ai.py
        python scripts/scrape_techcommunity_ai.py
        python scripts/scrape_techcrunch_ai.py
        python scripts/scrape_theverge_ai.py
        python scripts/scrape_venturebeat_ai.py
        python scripts/scrape_anthropic_videos.py
        python scripts/scrape_google_deepmind_videos.py
        python scripts/scrape_microsoft_azure_videos.py
        python scripts/scrape_mistral_videos.py
        python scripts/scrape_openai_videos.py

    - name: Scrape arXiv
      id: scrape_arxiv
      run: python scripts/scrape_arxiv_ai.py

    # --- POST-SCRAPING ---
    - name: Combine JSON files
      run: python scripts/generate_json.py

    - name: Clean JSON files
      run: python scripts/clean_json.py

    - name: Generate summaries
      run: python scripts/generate_summaries.py

    - name: Generate keywords for articles
      run: python scripts/generate_keywords.py

    - name: Generate keywords for scientific articles
      if: steps.scrape_arxiv.outcome == 'success'
      run: python scripts/generate_keywords_scientific_articles.py

    - name: Upload generated JSON files
      uses: actions/upload-artifact@v4
      with:
        name: json-outputs
        path: |
          articles.json
          videos.json
          arxiv_articles.json
          monitoring.json
